<UserControl x:Class="VsChromium.Features.ToolWindows.SourceExplorer.SourceExplorerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.12.0"
             xmlns:wpf="clr-namespace:VsChromium.Wpf"
             xmlns:toolWindows="clr-namespace:VsChromium.Features.ToolWindows"
             xmlns:sourceExplorer="clr-namespace:VsChromium.Features.ToolWindows.SourceExplorer"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Name="FileExplorerToolWindow"
             Background="{DynamicResource VsBrush.ToolWindowBackground}"
             Foreground="{DynamicResource VsBrush.ToolWindowText}"
             HorizontalAlignment="Stretch" d:DataContext="{d:DesignData SourceExplorerViewModel}">
  <UserControl.Resources>
    <Style TargetType="ToggleButton">
      <Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarGradient}"/>
      <Setter Property="Foreground" Value="{DynamicResource VsBrush.ButtonFace}"/>
      <Setter Property="TextElement.Foreground" Value="{DynamicResource VsBrush.CommandBarTextActiveKey}" />
      <Style.Triggers>
        <Trigger Property="IsPressed" Value="true">
          <Setter Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarBorderKey}" />
          <Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseDownBackgroundGradientKey}" />
          <Setter x:Uid="Setter_223" Property="TextElement.Foreground" Value="{DynamicResource VsBrush.CommandBarTextSelectedKey}"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="false">
          <Setter Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarBorderKey}" />
          <Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarGradient}" />
          <Setter x:Uid="Setter_223" Property="TextElement.Foreground" Value="{DynamicResource VsBrush.CommandBarTextActiveKey}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="wpf:EditableComboBox">
      <!-- Note: The "Foreground" property somehow gets overriden in VS2012+ themes,
           so we have to repeat it in the controls themselves even though the value here is correct. -->
      <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
      <Setter Property="Background" Value="{DynamicResource VsBrush.ComboBoxBackground}"/>
      <Setter Property="DropDownBrush" Value="{DynamicResource VsBrush.ComboBoxBackground}"/>
      <Setter Property="ArrowBrush" Value="{DynamicResource VsBrush.ComboBoxGlyph}"/>
      <Setter Property="CursorBrush" Value="{DynamicResource VsBrush.ComboBoxBackground}"/>
      <Setter Property="Margin" Value="6,0"/>
      <Setter Property="IsEditable" Value="True"/>
      <Setter Property="ItemsSource" Value="{Binding Items}"/>
      <Setter Property="SelectedItem" Value="{Binding SelectedItem}"/>
      <Setter Property="Text" Value="{Binding NewItem, UpdateSourceTrigger=LostFocus}"/>
    </Style>
  </UserControl.Resources>

  <DockPanel>
    <Border DockPanel.Dock="Top" BorderBrush="Orange" BorderThickness="2,2,2,2" Visibility="{Binding Path=UpdateInfoVisibility, Mode=OneWay}">
      <StackPanel HorizontalAlignment="Stretch" Margin="2,2,2,2" Orientation="Vertical" Background="{DynamicResource VsBrush.ToolWindowBackground}">
        <TextBlock TextWrapping="Wrap">
          <Run Text="{Binding Path=UpdateInfoText, Mode=OneWay}" />
          <Hyperlink NavigateUri="{Binding Path=UpdateInfoUrl, Mode=OneWay}" RequestNavigate="Hyperlink_RequestNavigate">
            <Run Text="{Binding Path=UpdateInfoUrl, Mode=OneWay}" />
          </Hyperlink>
        </TextBlock>
      </StackPanel>
    </Border>

    <ToolBar DockPanel.Dock="Top" Background="{DynamicResource VsBrush.CommandBarGradient}" IsHitTestVisible="True">
      <ToggleButton Content="Aa" IsChecked="{Binding MatchCase}" ToolTip="Match case for searches" IsTabStop="False" />
    </ToolBar>

    <!-- SEARCH AREA -->
    <Border DockPanel.Dock="Top" BorderBrush="Gray" BorderThickness="1,1,1,1">
      <Border.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Color="#33000000" Offset="0" />
          <GradientStop Color="#11000000" Offset="1" />
        </LinearGradientBrush>
      </Border.Background>

      <StackPanel HorizontalAlignment="Stretch" Margin="2,2,2,0" Orientation="Vertical">
        <Grid HorizontalAlignment="Stretch" Margin="0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="0" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70" />
            <ColumnDefinition MinWidth="100" />
            <ColumnDefinition Width="22"/>
          </Grid.ColumnDefinitions>
          <!-- Row 0 -->
          <TextBlock Grid.Row="0" Grid.Column="0" Text="Files:" />
          <wpf:EditableComboBox Grid.Row="0" Grid.Column="1" x:Name="FileNamesSearch" Foreground="{DynamicResource VsBrush.ToolWindowText}" ToolTip="Type file names to search for, including wildcards and directory names, e.g. &quot;bar&quot;, &quot;bar.*&quot;, &quot;foo/bar*&quot;, &quot;foo/**/bar.*&quot;"/>
          <Button Grid.Row="0" Grid.Column="2" Width="20" Click="CancelSearchButton_Click" IsTabStop="False">x</Button>
          <!-- Row 1 -->
          <TextBlock Grid.Row="1" Grid.Column="0" Text="Directories:"/>
          <wpf:EditableComboBox Grid.Row="1" Grid.Column="1" x:Name="DirectoryNamesSearch" Foreground="{DynamicResource VsBrush.ToolWindowText}" ToolTip="Type directory name to search for, including wildcards, e.g. &quot;foo&quot;, &quot;foo/bar*&quot;, &quot;foo/**/bar&quot;, &quot;/bar&quot;"/>
          <Button Grid.Row="1" Grid.Column="2" Width="20" Click="CancelSearchButton_Click" IsTabStop="False">x</Button>
          <!-- Row 2 -->
          <TextBlock Grid.Row="2" Grid.Column="0" Text="Contents:" Height="22" VerticalAlignment="Bottom" />
          <wpf:EditableComboBox Grid.Row="2" Grid.Column="1" x:Name="FileContentsSearch" Foreground="{DynamicResource VsBrush.ToolWindowText}" ToolTip="Type text to search for, including the &quot;*&quot; wildcard and the &quot;\&quot; escape character, e.g. &quot;sometext&quot;, &quot;some*text&quot;, &quot;some\*text&quot;, &quot;some*other*text&quot;"/>
          <Button Grid.Row="2" Grid.Column="2" Width="20" Click="CancelSearchButton_Click" IsTabStop="False" Height="22" Margin="1,0" VerticalAlignment="Bottom">x</Button>
          <!-- Row 4 -->
          <ProgressBar Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" IsIndeterminate="False" Height="8" Name="ProgressBar" BorderThickness="0" Visibility="Hidden" IsTabStop="False" />
        </Grid>
      </StackPanel>
    </Border>

    <!-- 'RootNode' is the property name of the control's DataContext instance. -->
    <TreeView
      ItemsSource="{Binding RootNodes}"
      Name="FileTreeView" Height="Auto"
      Background="{DynamicResource VsBrush.ToolWindowBackground}"
      Foreground="{DynamicResource VsBrush.WindowText}" PreviewKeyDown="FileTreeView_OnPreviewKeyDown"
      VirtualizingStackPanel.IsVirtualizing="True"
      VirtualizingStackPanel.VirtualizationMode="Recycling" PreviewMouseRightButtonDown="FileTreeView_PreviewMouseRightButtonDown">

      <TreeView.ItemContainerStyle>
        <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel. -->
        <Style TargetType="{x:Type TreeViewItem}">
          <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
          <Setter Property="FontWeight" Value="Normal" />
          <Setter Property="Foreground" Value="{DynamicResource VsBrush.WindowText}" />
          <Setter Property="ItemsPanel">
            <Setter.Value>
              <ItemsPanelTemplate>
                <wpf:MyVirtualizingStackPanel />
              </ItemsPanelTemplate>
            </Setter.Value>
          </Setter>
          <EventSetter Event="PreviewMouseDoubleClick" Handler="TreeViewItem_PreviewMouseDoubleClick"/>
          <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView"/>
          <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
          <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <!--<Setter Property="FontWeight" Value="Bold" />-->
              <Setter Property="Background" Value="{DynamicResource VsBrush.Highlight}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </TreeView.ItemContainerStyle>

      <TreeView.ItemsPanel>
        <ItemsPanelTemplate>
          <!-- This custom VSP exposes BringIntoView -->
          <wpf:MyVirtualizingStackPanel />
        </ItemsPanelTemplate>
      </TreeView.ItemsPanel>

      <TreeView.Resources>

        <HierarchicalDataTemplate DataType="{x:Type sourceExplorer:DirectoryEntryViewModel}" ItemsSource="{Binding Children}">
          <StackPanel Orientation="Horizontal">
            <StackPanel.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Open In Source Explorer" Command="{Binding OpenCommand}" FontWeight="Bold" />
                <MenuItem Header="Copy Full Path" Command="{Binding CopyFullPathCommand}" />
                <MenuItem Header="Copy Relative Path" Command="{Binding CopyRelativePathCommand}" />
                <MenuItem Header="Copy Full Path with &quot;/&quot;" Command="{Binding CopyFullPathPosixCommand}" />
                <MenuItem Header="Copy Relative Path  with &quot;/&quot;" Command="{Binding CopyRelativePathPosixCommand}" />
                <MenuItem Header="Open Containing Folder" Command="{Binding OpenContainingFolderCommand}" />
              </ContextMenu>
            </StackPanel.ContextMenu>
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}" />
            <TextBlock Text="{Binding DisplayText}" />
          </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type sourceExplorer:FileEntryViewModel}" ItemsSource="{Binding Children}">
          <StackPanel Orientation="Horizontal" >
            <StackPanel.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Open" Command="{Binding OpenCommand}" FontWeight="Bold" />
                <MenuItem Header="Copy Full Path" Command="{Binding CopyFullPathCommand}" />
                <MenuItem Header="Copy Relative Path" Command="{Binding CopyRelativePathCommand}" />
                <MenuItem Header="Copy Full Path with &quot;/&quot;" Command="{Binding CopyFullPathPosixCommand}" />
                <MenuItem Header="Copy Relative Path  with &quot;/&quot;" Command="{Binding CopyRelativePathPosixCommand}" />
                <MenuItem Header="Open Containing Folder" Command="{Binding OpenContainingFolderCommand}" />
              </ContextMenu>
            </StackPanel.ContextMenu>
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}" />
            <TextBlock Text="{Binding DisplayText}" />
          </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type toolWindows:RootErrorItemViewModel}" ItemsSource="{Binding Children}">
          <StackPanel Orientation="Horizontal">
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}" />
            <TextBlock Text="{Binding Text}" />
          </StackPanel>
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type toolWindows:LazyItemViewModel}">
          <StackPanel Orientation="Horizontal">
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}" />
            <TextBlock Text="{Binding Text}" />
          </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type toolWindows:TextItemViewModel}">
          <StackPanel Orientation="Horizontal">
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}" />
            <TextBlock Text="{Binding Text}" />
          </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type sourceExplorer:FilePositionViewModel}">
          <StackPanel Orientation="Horizontal">
            <StackPanel.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Open" Command="{Binding OpenCommand}" FontWeight="Bold" />
                <MenuItem Header="Copy Full Path" Command="{Binding CopyFullPathCommand}" />
                <MenuItem Header="Copy Relative Path" Command="{Binding CopyRelativePathCommand}" />
                <MenuItem Header="Copy Full Path with &quot;/&quot;" Command="{Binding CopyFullPathPosixCommand}" />
                <MenuItem Header="Copy Relative Path  with &quot;/&quot;" Command="{Binding CopyRelativePathPosixCommand}" />
                <MenuItem Header="Open Containing Folder" Command="{Binding OpenContainingFolderCommand}" />
              </ContextMenu>
            </StackPanel.ContextMenu>
            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSourcePath}"/>
            <TextBlock Text="{Binding DisplayText}" FontFamily="Consolas" FontSize="12" />
          </StackPanel>
        </DataTemplate>

      </TreeView.Resources>
    </TreeView>

  </DockPanel>
</UserControl>
